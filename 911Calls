{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5ce52e78-cd8a-4e98-8615-c7c6c6cd4a2a",
   "metadata": {},
   "source": [
    "## 911 Calls Capstone Project\n",
    "For this Capstone project I will be analyzing some 911 call data from Kaggle.\n",
    "\n",
    "Data contains the following fields:\n",
    "    * lat: String variable, Lattitude\n",
    "    * lng: String variable, Longitude\n",
    "    *desc: String variable, Description of the Emergency Call\n",
    "    *zip: String variable, Zipcode\n",
    "    *title: String variable, Title\n",
    "    *timeStamp: String variable, YYYY-MM-DD HH:MM:SS\n",
    "    *twp: String variable, Address\n",
    "    *e: String variable, Dummy variable(always 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7cf0d978-eea2-4630-aec4-439d48f91612",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1610ad9a-2213-42aa-ba4f-1d4ddfe0fa73",
   "metadata": {},
   "outputs": [],
   "source": [
    "callsdata = r'C:\\Users\\desan\\OneDrive\\Documents\\DATA\\DATAANALYTICS\\DATAPROJECTS\\911 calls Capstone Project/911.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "89064c31-1e97-4950-84f8-be915754090f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(callsdata)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "976cfac2-d9be-4d43-8b50-20c8e1ea1dac",
   "metadata": {
    "tags": []
   },
   "source": [
    "### Check the Info() of the DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "89b57eb9-815a-4caf-b3a5-2d070d70b4cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.297876</td>\n",
       "      <td>-75.581294</td>\n",
       "      <td>REINDEER CT &amp; DEAD END;  NEW HANOVER; Station ...</td>\n",
       "      <td>19525.0</td>\n",
       "      <td>EMS: BACK PAINS/INJURY</td>\n",
       "      <td>2015-12-10 17:10:52</td>\n",
       "      <td>NEW HANOVER</td>\n",
       "      <td>REINDEER CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40.258061</td>\n",
       "      <td>-75.264680</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN;  HATFIELD TOWNSHIP...</td>\n",
       "      <td>19446.0</td>\n",
       "      <td>EMS: DIABETIC EMERGENCY</td>\n",
       "      <td>2015-12-10 17:29:21</td>\n",
       "      <td>HATFIELD TOWNSHIP</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40.121182</td>\n",
       "      <td>-75.351975</td>\n",
       "      <td>HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>Fire: GAS-ODOR/LEAK</td>\n",
       "      <td>2015-12-10 14:39:21</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>HAWS AVE</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40.116153</td>\n",
       "      <td>-75.343513</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST;  NORRISTOWN; Station 308A;...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>EMS: CARDIAC EMERGENCY</td>\n",
       "      <td>2015-12-10 16:47:36</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40.251492</td>\n",
       "      <td>-75.603350</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END;  LOWER POTTSGROVE; S...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EMS: DIZZINESS</td>\n",
       "      <td>2015-12-10 16:56:52</td>\n",
       "      <td>LOWER POTTSGROVE</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         lat        lng                                               desc  \\\n",
       "0  40.297876 -75.581294  REINDEER CT & DEAD END;  NEW HANOVER; Station ...   \n",
       "1  40.258061 -75.264680  BRIAR PATH & WHITEMARSH LN;  HATFIELD TOWNSHIP...   \n",
       "2  40.121182 -75.351975  HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...   \n",
       "3  40.116153 -75.343513  AIRY ST & SWEDE ST;  NORRISTOWN; Station 308A;...   \n",
       "4  40.251492 -75.603350  CHERRYWOOD CT & DEAD END;  LOWER POTTSGROVE; S...   \n",
       "\n",
       "       zip                    title            timeStamp                twp  \\\n",
       "0  19525.0   EMS: BACK PAINS/INJURY  2015-12-10 17:10:52        NEW HANOVER   \n",
       "1  19446.0  EMS: DIABETIC EMERGENCY  2015-12-10 17:29:21  HATFIELD TOWNSHIP   \n",
       "2  19401.0      Fire: GAS-ODOR/LEAK  2015-12-10 14:39:21         NORRISTOWN   \n",
       "3  19401.0   EMS: CARDIAC EMERGENCY  2015-12-10 16:47:36         NORRISTOWN   \n",
       "4      NaN           EMS: DIZZINESS  2015-12-10 16:56:52   LOWER POTTSGROVE   \n",
       "\n",
       "                         addr  e  \n",
       "0      REINDEER CT & DEAD END  1  \n",
       "1  BRIAR PATH & WHITEMARSH LN  1  \n",
       "2                    HAWS AVE  1  \n",
       "3          AIRY ST & SWEDE ST  1  \n",
       "4    CHERRYWOOD CT & DEAD END  1  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "956c4ca4-a428-4529-a026-d961f00485e7",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true,
    "tags": []
   },
   "source": [
    "### Check the head of the DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7acd04ba-ea84-4d5e-91f4-885ff8781736",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 663522 entries, 0 to 663521\n",
      "Data columns (total 9 columns):\n",
      " #   Column     Non-Null Count   Dtype  \n",
      "---  ------     --------------   -----  \n",
      " 0   lat        663522 non-null  float64\n",
      " 1   lng        663522 non-null  float64\n",
      " 2   desc       663522 non-null  object \n",
      " 3   zip        583323 non-null  float64\n",
      " 4   title      663522 non-null  object \n",
      " 5   timeStamp  663522 non-null  object \n",
      " 6   twp        663229 non-null  object \n",
      " 7   addr       663522 non-null  object \n",
      " 8   e          663522 non-null  int64  \n",
      "dtypes: float64(3), int64(1), object(5)\n",
      "memory usage: 45.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3520c0db-7217-4a20-95e1-702fdf8a0728",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "60dfbb43-c03e-403d-943b-e38ed4f024d8",
   "metadata": {},
   "source": [
    "### Basic Questions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e1681c9-d38a-4051-9f33-59c28c21ebb5",
   "metadata": {},
   "source": [
    "#### What are the top 5 zipcodes for 911 calls?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "06eb433c-7d4e-47df-95b8-993b910bbc69",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19401.0    45606\n",
       "19464.0    43910\n",
       "19403.0    34888\n",
       "19446.0    32270\n",
       "19406.0    22464\n",
       "Name: zip, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['zip'].value_counts().head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "256dd2b8-805c-4ce4-88a0-cc0807d1bd10",
   "metadata": {},
   "source": [
    "#### What are the top 5 townships (twp) for 911 calls?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ab91799e-7a74-4864-ac7d-24954bafedca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LOWER MERION    55490\n",
       "ABINGTON        39947\n",
       "NORRISTOWN      37633\n",
       "UPPER MERION    36010\n",
       "CHELTENHAM      30574\n",
       "Name: twp, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['twp'].value_counts().head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a86fde7-a92a-4f38-b9fe-d211ce92d660",
   "metadata": {},
   "source": [
    "#### How many unique title codes are there?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1d6b96f7-3d32-469c-bcdf-7338a5e12d6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "148"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df['title'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "973ace25-a9ed-4b43-8966-5bfd03083991",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "148"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['title'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3a327ed-d459-4416-b735-ddf0e3366267",
   "metadata": {},
   "source": [
    "### Fixing Title column creating a feature named Reason"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3238a962-eb69-41bf-ab4f-286163b0036b",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = df['title'].iloc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "31c40f0e-9486-4208-9e26-9594d98ee3ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'EMS'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x.split(':')[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "8536e8cb-85c5-4af0-9c94-931960db6741",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Reason'] = df['title'].apply(lambda title: title.split(':')[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e4a273c1-3660-487c-a6fb-db9cbb461d03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0             EMS\n",
       "1             EMS\n",
       "2            Fire\n",
       "3             EMS\n",
       "4             EMS\n",
       "           ...   \n",
       "663517    Traffic\n",
       "663518        EMS\n",
       "663519        EMS\n",
       "663520       Fire\n",
       "663521    Traffic\n",
       "Name: Reason, Length: 663522, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Reason']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe634900-9dc0-43ee-9444-247195f0769d",
   "metadata": {},
   "source": [
    "#### What is the most common Reason for a 911 call based off of this new column?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "33dfa0a1-1b14-4e4e-9630-1ab49f2f5ae1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EMS        332692\n",
       "Traffic    230208\n",
       "Fire       100622\n",
       "Name: Reason, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Reason'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8695298e-cf40-44fa-9f22-72ab750d2382",
   "metadata": {},
   "source": [
    "### Creating a countplot using Seaborn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5b5724a7-4f0c-45de-8e29-4d163a0c728f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Reason', ylabel='count'>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Reason',data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1f65233-723a-4d51-8b1e-65fe707f2396",
   "metadata": {},
   "source": [
    "### What is the data type of the objects in the timeStamp Column?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "223a82a9-ead4-40b2-8e97-b0918153a001",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 663522 entries, 0 to 663521\n",
      "Data columns (total 10 columns):\n",
      " #   Column     Non-Null Count   Dtype  \n",
      "---  ------     --------------   -----  \n",
      " 0   lat        663522 non-null  float64\n",
      " 1   lng        663522 non-null  float64\n",
      " 2   desc       663522 non-null  object \n",
      " 3   zip        583323 non-null  float64\n",
      " 4   title      663522 non-null  object \n",
      " 5   timeStamp  663522 non-null  object \n",
      " 6   twp        663229 non-null  object \n",
      " 7   addr       663522 non-null  object \n",
      " 8   e          663522 non-null  int64  \n",
      " 9   Reason     663522 non-null  object \n",
      "dtypes: float64(3), int64(1), object(6)\n",
      "memory usage: 50.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "91cc920d-8ba8-4f9e-9b45-3b0b99bfe260",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df['timeStamp'].iloc[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6f0e79c-3fbf-4a34-82f0-50e0151c0272",
   "metadata": {},
   "source": [
    "### Convert column from string to Datetime object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d242aee1-40bd-497d-adfc-a5a40733305c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['timeStamp'] = pd.to_datetime(df['timeStamp'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "c599de58-2227-40e7-bc4a-211a9eb8970a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas._libs.tslibs.timestamps.Timestamp"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df['timeStamp'].iloc[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef46a9ec-edf8-4471-9bfd-c5c276de3cff",
   "metadata": {},
   "source": [
    "#### Specific attributes from a Datetime object ( calling them)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "61b3d0d9-9890-4573-99b0-daac3d4f880b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time = df['timeStamp'].iloc[0]\n",
    "time.hour"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2a2c479-3d26-4cfd-9761-e9d56681d113",
   "metadata": {},
   "source": [
    "#### Separate the Datetime column into 3 new columns called, Hour, Month, and Day of Week."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "8093b2e4-7783-4417-82a8-410d9f328775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time.dayofweek"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "095550c5-0727-475a-9b50-c46dcf1d9159",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Hour'] = df['timeStamp'].apply(lambda time: time.hour)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "f49b6774-450e-4653-a445-17ca84d667aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Month'] = df['timeStamp'].apply(lambda time: time.month)\n",
    "df['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "79dca519-8e63-485a-a973-337da8d82aed",
   "metadata": {},
   "outputs": [],
   "source": [
    "# another way to do that\n",
    "\n",
    "# df['Month'] = time.month\n",
    "# df['Day of Week'] = time.dayofweek"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "a92c6b80-48eb-4321-bb7a-dae7f92eb154",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "      <th>Reason</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day of Week</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.297876</td>\n",
       "      <td>-75.581294</td>\n",
       "      <td>REINDEER CT &amp; DEAD END;  NEW HANOVER; Station ...</td>\n",
       "      <td>19525.0</td>\n",
       "      <td>EMS: BACK PAINS/INJURY</td>\n",
       "      <td>2015-12-10 17:10:52</td>\n",
       "      <td>NEW HANOVER</td>\n",
       "      <td>REINDEER CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40.258061</td>\n",
       "      <td>-75.264680</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN;  HATFIELD TOWNSHIP...</td>\n",
       "      <td>19446.0</td>\n",
       "      <td>EMS: DIABETIC EMERGENCY</td>\n",
       "      <td>2015-12-10 17:29:21</td>\n",
       "      <td>HATFIELD TOWNSHIP</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40.121182</td>\n",
       "      <td>-75.351975</td>\n",
       "      <td>HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>Fire: GAS-ODOR/LEAK</td>\n",
       "      <td>2015-12-10 14:39:21</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>HAWS AVE</td>\n",
       "      <td>1</td>\n",
       "      <td>Fire</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40.116153</td>\n",
       "      <td>-75.343513</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST;  NORRISTOWN; Station 308A;...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>EMS: CARDIAC EMERGENCY</td>\n",
       "      <td>2015-12-10 16:47:36</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40.251492</td>\n",
       "      <td>-75.603350</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END;  LOWER POTTSGROVE; S...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EMS: DIZZINESS</td>\n",
       "      <td>2015-12-10 16:56:52</td>\n",
       "      <td>LOWER POTTSGROVE</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         lat        lng                                               desc  \\\n",
       "0  40.297876 -75.581294  REINDEER CT & DEAD END;  NEW HANOVER; Station ...   \n",
       "1  40.258061 -75.264680  BRIAR PATH & WHITEMARSH LN;  HATFIELD TOWNSHIP...   \n",
       "2  40.121182 -75.351975  HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...   \n",
       "3  40.116153 -75.343513  AIRY ST & SWEDE ST;  NORRISTOWN; Station 308A;...   \n",
       "4  40.251492 -75.603350  CHERRYWOOD CT & DEAD END;  LOWER POTTSGROVE; S...   \n",
       "\n",
       "       zip                    title           timeStamp                twp  \\\n",
       "0  19525.0   EMS: BACK PAINS/INJURY 2015-12-10 17:10:52        NEW HANOVER   \n",
       "1  19446.0  EMS: DIABETIC EMERGENCY 2015-12-10 17:29:21  HATFIELD TOWNSHIP   \n",
       "2  19401.0      Fire: GAS-ODOR/LEAK 2015-12-10 14:39:21         NORRISTOWN   \n",
       "3  19401.0   EMS: CARDIAC EMERGENCY 2015-12-10 16:47:36         NORRISTOWN   \n",
       "4      NaN           EMS: DIZZINESS 2015-12-10 16:56:52   LOWER POTTSGROVE   \n",
       "\n",
       "                         addr  e Reason  Hour  Month  Day of Week  \n",
       "0      REINDEER CT & DEAD END  1    EMS    17     12            3  \n",
       "1  BRIAR PATH & WHITEMARSH LN  1    EMS    17     12            3  \n",
       "2                    HAWS AVE  1   Fire    14     12            3  \n",
       "3          AIRY ST & SWEDE ST  1    EMS    16     12            3  \n",
       "4    CHERRYWOOD CT & DEAD END  1    EMS    16     12            3  "
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97f64edd-6512-4678-814f-bfe94b0e2f7a",
   "metadata": {},
   "source": [
    "### Day of Week is an Integer 0-6. Lets change it with .map() to map the actual string names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "002fe914-5791-4e12-ab57-537a784ecfbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "dmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "40e21f7d-c9f0-432f-aaed-93bac464db1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Day of Week'] = df['Day of Week'].map(dmap)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ae89075e-b2e3-420c-966b-8ae0adf036d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "      <th>Reason</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day of Week</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.297876</td>\n",
       "      <td>-75.581294</td>\n",
       "      <td>REINDEER CT &amp; DEAD END;  NEW HANOVER; Station ...</td>\n",
       "      <td>19525.0</td>\n",
       "      <td>EMS: BACK PAINS/INJURY</td>\n",
       "      <td>2015-12-10 17:10:52</td>\n",
       "      <td>NEW HANOVER</td>\n",
       "      <td>REINDEER CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40.258061</td>\n",
       "      <td>-75.264680</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN;  HATFIELD TOWNSHIP...</td>\n",
       "      <td>19446.0</td>\n",
       "      <td>EMS: DIABETIC EMERGENCY</td>\n",
       "      <td>2015-12-10 17:29:21</td>\n",
       "      <td>HATFIELD TOWNSHIP</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40.121182</td>\n",
       "      <td>-75.351975</td>\n",
       "      <td>HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>Fire: GAS-ODOR/LEAK</td>\n",
       "      <td>2015-12-10 14:39:21</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>HAWS AVE</td>\n",
       "      <td>1</td>\n",
       "      <td>Fire</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40.116153</td>\n",
       "      <td>-75.343513</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST;  NORRISTOWN; Station 308A;...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>EMS: CARDIAC EMERGENCY</td>\n",
       "      <td>2015-12-10 16:47:36</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40.251492</td>\n",
       "      <td>-75.603350</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END;  LOWER POTTSGROVE; S...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EMS: DIZZINESS</td>\n",
       "      <td>2015-12-10 16:56:52</td>\n",
       "      <td>LOWER POTTSGROVE</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         lat        lng                                               desc  \\\n",
       "0  40.297876 -75.581294  REINDEER CT & DEAD END;  NEW HANOVER; Station ...   \n",
       "1  40.258061 -75.264680  BRIAR PATH & WHITEMARSH LN;  HATFIELD TOWNSHIP...   \n",
       "2  40.121182 -75.351975  HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...   \n",
       "3  40.116153 -75.343513  AIRY ST & SWEDE ST;  NORRISTOWN; Station 308A;...   \n",
       "4  40.251492 -75.603350  CHERRYWOOD CT & DEAD END;  LOWER POTTSGROVE; S...   \n",
       "\n",
       "       zip                    title           timeStamp                twp  \\\n",
       "0  19525.0   EMS: BACK PAINS/INJURY 2015-12-10 17:10:52        NEW HANOVER   \n",
       "1  19446.0  EMS: DIABETIC EMERGENCY 2015-12-10 17:29:21  HATFIELD TOWNSHIP   \n",
       "2  19401.0      Fire: GAS-ODOR/LEAK 2015-12-10 14:39:21         NORRISTOWN   \n",
       "3  19401.0   EMS: CARDIAC EMERGENCY 2015-12-10 16:47:36         NORRISTOWN   \n",
       "4      NaN           EMS: DIZZINESS 2015-12-10 16:56:52   LOWER POTTSGROVE   \n",
       "\n",
       "                         addr  e Reason  Hour  Month Day of Week  \n",
       "0      REINDEER CT & DEAD END  1    EMS    17     12         Thu  \n",
       "1  BRIAR PATH & WHITEMARSH LN  1    EMS    17     12         Thu  \n",
       "2                    HAWS AVE  1   Fire    14     12         Thu  \n",
       "3          AIRY ST & SWEDE ST  1    EMS    16     12         Thu  \n",
       "4    CHERRYWOOD CT & DEAD END  1    EMS    16     12         Thu  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0269a633-7485-4ba8-901d-81016ee71d8a",
   "metadata": {},
   "source": [
    "### Countplot of Day of Week"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c3f1ad19-33a5-4c22-8043-58c500728b9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Day of Week', ylabel='count'>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Day of Week',data=df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "850e41ad-3653-49db-868f-f86b4dc5590d",
   "metadata": {},
   "source": [
    "#### Countplot - Day of Week with HUE based off of the Reason column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "5d3910c1-ae17-40ae-86f3-7b7997997c50",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x207b8940cd0>"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Day of Week',data=df,hue='Reason')\n",
    "# We can relocate the Legend\n",
    "plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9befb9f4-b33c-40e1-aa62-049a624c9385",
   "metadata": {},
   "source": [
    "#### Countplot - Month Column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "958ed6d8-0b57-4fe4-bd6c-d301fed34828",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x207d0224070>"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Month',data=df,hue='Reason')\n",
    "plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a62ee6c-6923-4a0e-865e-aeafdc04ed1a",
   "metadata": {},
   "source": [
    "#### Groupby object called byMonth, and use the count() method for aggregation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "9d7ebd97-6ad4-47d3-b3d0-90b01d8f5688",
   "metadata": {},
   "outputs": [],
   "source": [
    "byMonth = df.groupby('Month').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "09dba92a-a8f1-45b4-8431-09c22fb0b2ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "      <th>Reason</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Day of Week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Month</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "      <td>55294</td>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "      <td>62312</td>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "      <td>62336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "      <td>48922</td>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "      <td>55405</td>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "      <td>55427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "      <td>53252</td>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "      <td>60001</td>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "      <td>60027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "      <td>47349</td>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "      <td>53655</td>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "      <td>53671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "      <td>50354</td>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "      <td>57474</td>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "      <td>57509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "      <td>52593</td>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "      <td>60005</td>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "      <td>60034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "      <td>52507</td>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "      <td>59802</td>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "      <td>59832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "      <td>42311</td>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "      <td>48335</td>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "      <td>48359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "      <td>41289</td>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "      <td>47196</td>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "      <td>47213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "      <td>44582</td>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "      <td>51220</td>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "      <td>51240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "      <td>44087</td>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "      <td>50157</td>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "      <td>50182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "      <td>50783</td>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "      <td>57667</td>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "      <td>57692</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         lat    lng   desc    zip  title  timeStamp    twp   addr      e  \\\n",
       "Month                                                                      \n",
       "1      62336  62336  62336  55294  62336      62336  62312  62336  62336   \n",
       "2      55427  55427  55427  48922  55427      55427  55405  55427  55427   \n",
       "3      60027  60027  60027  53252  60027      60027  60001  60027  60027   \n",
       "4      53671  53671  53671  47349  53671      53671  53655  53671  53671   \n",
       "5      57509  57509  57509  50354  57509      57509  57474  57509  57509   \n",
       "6      60034  60034  60034  52593  60034      60034  60005  60034  60034   \n",
       "7      59832  59832  59832  52507  59832      59832  59802  59832  59832   \n",
       "8      48359  48359  48359  42311  48359      48359  48335  48359  48359   \n",
       "9      47213  47213  47213  41289  47213      47213  47196  47213  47213   \n",
       "10     51240  51240  51240  44582  51240      51240  51220  51240  51240   \n",
       "11     50182  50182  50182  44087  50182      50182  50157  50182  50182   \n",
       "12     57692  57692  57692  50783  57692      57692  57667  57692  57692   \n",
       "\n",
       "       Reason   Hour  Day of Week  \n",
       "Month                              \n",
       "1       62336  62336        62336  \n",
       "2       55427  55427        55427  \n",
       "3       60027  60027        60027  \n",
       "4       53671  53671        53671  \n",
       "5       57509  57509        57509  \n",
       "6       60034  60034        60034  \n",
       "7       59832  59832        59832  \n",
       "8       48359  48359        48359  \n",
       "9       47213  47213        47213  \n",
       "10      51240  51240        51240  \n",
       "11      50182  50182        50182  \n",
       "12      57692  57692        57692  "
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "byMonth.head(12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "f5cfe444-69b5-4d0d-b64f-e4b308249044",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Month'>"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "byMonth['lat'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "61290221-99b5-44f1-8614-b13db1677be1",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x207ca43b310>"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Month',data=df)\n",
    "plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecd0f608-cd25-48dc-9b90-61257c822c13",
   "metadata": {},
   "source": [
    "#### Using implot() to create a linear fit on the number of calls per month"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "47c5460d-af93-4eb6-a799-b3184754fb65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x207c946a280>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lmplot(x='Month',y='twp',data=byMonth.reset_index())\n",
    "# We have to reset the index because there's not Month column in byMonth\n",
    "# That would make Month into a new column.\n",
    "# byMonth.reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37503513-e69e-4046-9945-91a60133d739",
   "metadata": {},
   "source": [
    "### Let's explore more into the Date's information"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "456dc129-fae0-4e3f-8931-df5dbecc673e",
   "metadata": {},
   "source": [
    "#### Creating Date column with timeStamp column, using .date() method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "043ba7dd-1d6f-4766-80f0-d871c6d56adb",
   "metadata": {},
   "outputs": [],
   "source": [
    "t = df['timeStamp'].iloc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "420d2636-f0c3-4036-8940-cafa1e7651b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2015-12-10 17:10:52')"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "dfcb7d95-c757-44f4-b164-73797b6f2259",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "datetime.date(2015, 12, 10)"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t.date()\n",
    "# with this we get the Date Object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "594985e8-199d-4d71-ac6c-f87828dd43dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Date'] = df['timeStamp'].apply(lambda t:t.date())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "b56a6d07-18d6-403f-89d9-cc306c0ad8aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "      <th>Reason</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day of Week</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.297876</td>\n",
       "      <td>-75.581294</td>\n",
       "      <td>REINDEER CT &amp; DEAD END;  NEW HANOVER; Station ...</td>\n",
       "      <td>19525.0</td>\n",
       "      <td>EMS: BACK PAINS/INJURY</td>\n",
       "      <td>2015-12-10 17:10:52</td>\n",
       "      <td>NEW HANOVER</td>\n",
       "      <td>REINDEER CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "      <td>2015-12-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40.258061</td>\n",
       "      <td>-75.264680</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN;  HATFIELD TOWNSHIP...</td>\n",
       "      <td>19446.0</td>\n",
       "      <td>EMS: DIABETIC EMERGENCY</td>\n",
       "      <td>2015-12-10 17:29:21</td>\n",
       "      <td>HATFIELD TOWNSHIP</td>\n",
       "      <td>BRIAR PATH &amp; WHITEMARSH LN</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "      <td>2015-12-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40.121182</td>\n",
       "      <td>-75.351975</td>\n",
       "      <td>HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>Fire: GAS-ODOR/LEAK</td>\n",
       "      <td>2015-12-10 14:39:21</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>HAWS AVE</td>\n",
       "      <td>1</td>\n",
       "      <td>Fire</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "      <td>2015-12-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40.116153</td>\n",
       "      <td>-75.343513</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST;  NORRISTOWN; Station 308A;...</td>\n",
       "      <td>19401.0</td>\n",
       "      <td>EMS: CARDIAC EMERGENCY</td>\n",
       "      <td>2015-12-10 16:47:36</td>\n",
       "      <td>NORRISTOWN</td>\n",
       "      <td>AIRY ST &amp; SWEDE ST</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "      <td>2015-12-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40.251492</td>\n",
       "      <td>-75.603350</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END;  LOWER POTTSGROVE; S...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>EMS: DIZZINESS</td>\n",
       "      <td>2015-12-10 16:56:52</td>\n",
       "      <td>LOWER POTTSGROVE</td>\n",
       "      <td>CHERRYWOOD CT &amp; DEAD END</td>\n",
       "      <td>1</td>\n",
       "      <td>EMS</td>\n",
       "      <td>16</td>\n",
       "      <td>12</td>\n",
       "      <td>Thu</td>\n",
       "      <td>2015-12-10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         lat        lng                                               desc  \\\n",
       "0  40.297876 -75.581294  REINDEER CT & DEAD END;  NEW HANOVER; Station ...   \n",
       "1  40.258061 -75.264680  BRIAR PATH & WHITEMARSH LN;  HATFIELD TOWNSHIP...   \n",
       "2  40.121182 -75.351975  HAWS AVE; NORRISTOWN; 2015-12-10 @ 14:39:21-St...   \n",
       "3  40.116153 -75.343513  AIRY ST & SWEDE ST;  NORRISTOWN; Station 308A;...   \n",
       "4  40.251492 -75.603350  CHERRYWOOD CT & DEAD END;  LOWER POTTSGROVE; S...   \n",
       "\n",
       "       zip                    title           timeStamp                twp  \\\n",
       "0  19525.0   EMS: BACK PAINS/INJURY 2015-12-10 17:10:52        NEW HANOVER   \n",
       "1  19446.0  EMS: DIABETIC EMERGENCY 2015-12-10 17:29:21  HATFIELD TOWNSHIP   \n",
       "2  19401.0      Fire: GAS-ODOR/LEAK 2015-12-10 14:39:21         NORRISTOWN   \n",
       "3  19401.0   EMS: CARDIAC EMERGENCY 2015-12-10 16:47:36         NORRISTOWN   \n",
       "4      NaN           EMS: DIZZINESS 2015-12-10 16:56:52   LOWER POTTSGROVE   \n",
       "\n",
       "                         addr  e Reason  Hour  Month Day of Week        Date  \n",
       "0      REINDEER CT & DEAD END  1    EMS    17     12         Thu  2015-12-10  \n",
       "1  BRIAR PATH & WHITEMARSH LN  1    EMS    17     12         Thu  2015-12-10  \n",
       "2                    HAWS AVE  1   Fire    14     12         Thu  2015-12-10  \n",
       "3          AIRY ST & SWEDE ST  1    EMS    16     12         Thu  2015-12-10  \n",
       "4    CHERRYWOOD CT & DEAD END  1    EMS    16     12         Thu  2015-12-10  "
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ba897ab-4013-4665-824d-55264b995bb3",
   "metadata": {},
   "source": [
    "#### Groupby Date column using count() aggregate and create a plot of counts of 911"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "2b6e7d5e-6e76-42cd-b755-c93b14107b97",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "      <th>Reason</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Month</th>\n",
       "      <th>Day of Week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2015-12-10</th>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>100</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-11</th>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>332</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "      <td>391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-12</th>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>334</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "      <td>402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-13</th>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>279</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "      <td>316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-14</th>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>386</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>443</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "      <td>444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-15</th>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>380</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>418</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "      <td>419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015-12-16</th>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>343</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "      <td>376</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            lat  lng  desc  zip  title  timeStamp  twp  addr    e  Reason  \\\n",
       "Date                                                                        \n",
       "2015-12-10  114  114   114  100    114        114  114   114  114     114   \n",
       "2015-12-11  391  391   391  332    391        391  391   391  391     391   \n",
       "2015-12-12  402  402   402  334    402        402  402   402  402     402   \n",
       "2015-12-13  316  316   316  279    316        316  316   316  316     316   \n",
       "2015-12-14  444  444   444  386    444        444  443   444  444     444   \n",
       "2015-12-15  419  419   419  380    419        419  418   419  419     419   \n",
       "2015-12-16  376  376   376  343    376        376  376   376  376     376   \n",
       "\n",
       "            Hour  Month  Day of Week  \n",
       "Date                                  \n",
       "2015-12-10   114    114          114  \n",
       "2015-12-11   391    391          391  \n",
       "2015-12-12   402    402          402  \n",
       "2015-12-13   316    316          316  \n",
       "2015-12-14   444    444          444  \n",
       "2015-12-15   419    419          419  \n",
       "2015-12-16   376    376          376  "
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('Date').count().head(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "48548ff1-4e5f-45ae-b384-ad43f75e5f30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date\n",
       "2015-12-10    114\n",
       "2015-12-11    391\n",
       "2015-12-12    402\n",
       "2015-12-13    316\n",
       "2015-12-14    444\n",
       "             ... \n",
       "2020-07-25    318\n",
       "2020-07-26    296\n",
       "2020-07-27    329\n",
       "2020-07-28    370\n",
       "2020-07-29    217\n",
       "Name: lat, Length: 1694, dtype: int64"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('Date').count()['lat']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "073830eb-2135-4f2f-9798-663047cb9b20",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.groupby('Date').count()['lat'].plot()\n",
    "#There are values overlapping, so we can use\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73ecf4cf-7095-413b-874f-ac37177d139c",
   "metadata": {},
   "source": [
    "#### Recreating the plot into the 3 Reasons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "06a2a15a-0f41-44b6-b271-300f7a1cee07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[df['Reason']=='Traffic'].groupby('Date').count()['lat'].plot()\n",
    "plt.title('Traffic')\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "4948433c-578d-4066-a8c7-15d2f0c07f26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[df['Reason']=='Fire'].groupby('Date').count()['lat'].plot()\n",
    "plt.title('Fire')\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "42a6a499-6613-49eb-9183-72854b36547a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[df['Reason']=='EMS'].groupby('Date').count()['lat'].plot()\n",
    "plt.title('EMS')\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30ea4709-8095-40f0-a32d-363a8430bab9",
   "metadata": {},
   "source": [
    "### Working withn seaborn HeatMaps "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "274b6967-564c-43d2-84ce-045e97a4271c",
   "metadata": {},
   "source": [
    "#### Restructure the df. Column ----> Hours \\ Index -----> Day of the Week\n",
    "##### Let's try groupby with unstack method"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99690c74-9bb4-456f-a855-521b7835a281",
   "metadata": {},
   "source": [
    "##### Step 1:  groupby Multiple columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "8efa1e1b-4a4a-437f-8300-e0b493e24b29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "      <th>desc</th>\n",
       "      <th>zip</th>\n",
       "      <th>title</th>\n",
       "      <th>timeStamp</th>\n",
       "      <th>twp</th>\n",
       "      <th>addr</th>\n",
       "      <th>e</th>\n",
       "      <th>Reason</th>\n",
       "      <th>Month</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Day of Week</th>\n",
       "      <th>Hour</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Fri</th>\n",
       "      <th>0</th>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "      <td>1752</td>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "      <td>1981</td>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "      <td>1983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "      <td>1451</td>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "      <td>1632</td>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "      <td>1635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1311</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "      <td>1449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1173</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "      <td>1296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "      <td>1227</td>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "      <td>1338</td>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "      <td>1339</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">Wed</th>\n",
       "      <th>19</th>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "      <td>4165</td>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "      <td>4684</td>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "      <td>4686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "      <td>3661</td>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "      <td>4113</td>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "      <td>4116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "      <td>3143</td>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "      <td>3530</td>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "      <td>3537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "      <td>2511</td>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "      <td>2825</td>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "      <td>2826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "      <td>1965</td>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "      <td>2204</td>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "      <td>2207</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>168 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   lat   lng  desc   zip  title  timeStamp   twp  addr     e  \\\n",
       "Day of Week Hour                                                               \n",
       "Fri         0     1983  1983  1983  1752   1983       1983  1981  1983  1983   \n",
       "            1     1635  1635  1635  1451   1635       1635  1632  1635  1635   \n",
       "            2     1449  1449  1449  1311   1449       1449  1449  1449  1449   \n",
       "            3     1296  1296  1296  1173   1296       1296  1296  1296  1296   \n",
       "            4     1339  1339  1339  1227   1339       1339  1338  1339  1339   \n",
       "...                ...   ...   ...   ...    ...        ...   ...   ...   ...   \n",
       "Wed         19    4686  4686  4686  4165   4686       4686  4684  4686  4686   \n",
       "            20    4116  4116  4116  3661   4116       4116  4113  4116  4116   \n",
       "            21    3537  3537  3537  3143   3537       3537  3530  3537  3537   \n",
       "            22    2826  2826  2826  2511   2826       2826  2825  2826  2826   \n",
       "            23    2207  2207  2207  1965   2207       2207  2204  2207  2207   \n",
       "\n",
       "                  Reason  Month  Date  \n",
       "Day of Week Hour                       \n",
       "Fri         0       1983   1983  1983  \n",
       "            1       1635   1635  1635  \n",
       "            2       1449   1449  1449  \n",
       "            3       1296   1296  1296  \n",
       "            4       1339   1339  1339  \n",
       "...                  ...    ...   ...  \n",
       "Wed         19      4686   4686  4686  \n",
       "            20      4116   4116  4116  \n",
       "            21      3537   3537  3537  \n",
       "            22      2826   2826  2826  \n",
       "            23      2207   2207  2207  \n",
       "\n",
       "[168 rows x 12 columns]"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by=['Day of Week', 'Hour']).count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c328b721-7a98-4ecc-a8fd-797156b33295",
   "metadata": {},
   "source": [
    "##### Step 2 and 3:  create Multi- level index, and unstack the index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "5615685b-dd27-459f-b90c-eb54da5f1374",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Hour</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Day of Week</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fri</th>\n",
       "      <td>1983</td>\n",
       "      <td>1635</td>\n",
       "      <td>1449</td>\n",
       "      <td>1296</td>\n",
       "      <td>1339</td>\n",
       "      <td>1639</td>\n",
       "      <td>2670</td>\n",
       "      <td>4143</td>\n",
       "      <td>5018</td>\n",
       "      <td>5288</td>\n",
       "      <td>...</td>\n",
       "      <td>6394</td>\n",
       "      <td>7040</td>\n",
       "      <td>7065</td>\n",
       "      <td>7113</td>\n",
       "      <td>5668</td>\n",
       "      <td>5056</td>\n",
       "      <td>4375</td>\n",
       "      <td>3913</td>\n",
       "      <td>3422</td>\n",
       "      <td>2834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mon</th>\n",
       "      <td>1894</td>\n",
       "      <td>1571</td>\n",
       "      <td>1368</td>\n",
       "      <td>1272</td>\n",
       "      <td>1336</td>\n",
       "      <td>1844</td>\n",
       "      <td>2675</td>\n",
       "      <td>4430</td>\n",
       "      <td>5504</td>\n",
       "      <td>5724</td>\n",
       "      <td>...</td>\n",
       "      <td>5713</td>\n",
       "      <td>6289</td>\n",
       "      <td>6346</td>\n",
       "      <td>6408</td>\n",
       "      <td>5441</td>\n",
       "      <td>4488</td>\n",
       "      <td>3823</td>\n",
       "      <td>3254</td>\n",
       "      <td>2658</td>\n",
       "      <td>2072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sat</th>\n",
       "      <td>2447</td>\n",
       "      <td>2059</td>\n",
       "      <td>1883</td>\n",
       "      <td>1592</td>\n",
       "      <td>1451</td>\n",
       "      <td>1580</td>\n",
       "      <td>1880</td>\n",
       "      <td>2489</td>\n",
       "      <td>3457</td>\n",
       "      <td>4315</td>\n",
       "      <td>...</td>\n",
       "      <td>5421</td>\n",
       "      <td>5181</td>\n",
       "      <td>5211</td>\n",
       "      <td>5213</td>\n",
       "      <td>4980</td>\n",
       "      <td>4753</td>\n",
       "      <td>4127</td>\n",
       "      <td>3895</td>\n",
       "      <td>3226</td>\n",
       "      <td>2965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sun</th>\n",
       "      <td>2424</td>\n",
       "      <td>2135</td>\n",
       "      <td>1946</td>\n",
       "      <td>1614</td>\n",
       "      <td>1471</td>\n",
       "      <td>1488</td>\n",
       "      <td>1726</td>\n",
       "      <td>2408</td>\n",
       "      <td>3001</td>\n",
       "      <td>3728</td>\n",
       "      <td>...</td>\n",
       "      <td>4744</td>\n",
       "      <td>4475</td>\n",
       "      <td>4560</td>\n",
       "      <td>4505</td>\n",
       "      <td>4402</td>\n",
       "      <td>4135</td>\n",
       "      <td>3748</td>\n",
       "      <td>3161</td>\n",
       "      <td>2629</td>\n",
       "      <td>2323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thu</th>\n",
       "      <td>1731</td>\n",
       "      <td>1408</td>\n",
       "      <td>1426</td>\n",
       "      <td>1236</td>\n",
       "      <td>1293</td>\n",
       "      <td>1775</td>\n",
       "      <td>2816</td>\n",
       "      <td>4432</td>\n",
       "      <td>5297</td>\n",
       "      <td>5412</td>\n",
       "      <td>...</td>\n",
       "      <td>6079</td>\n",
       "      <td>6493</td>\n",
       "      <td>6375</td>\n",
       "      <td>6935</td>\n",
       "      <td>5512</td>\n",
       "      <td>4703</td>\n",
       "      <td>4045</td>\n",
       "      <td>3490</td>\n",
       "      <td>2844</td>\n",
       "      <td>2354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tue</th>\n",
       "      <td>1720</td>\n",
       "      <td>1459</td>\n",
       "      <td>1322</td>\n",
       "      <td>1213</td>\n",
       "      <td>1247</td>\n",
       "      <td>1741</td>\n",
       "      <td>2784</td>\n",
       "      <td>4425</td>\n",
       "      <td>5634</td>\n",
       "      <td>5566</td>\n",
       "      <td>...</td>\n",
       "      <td>5926</td>\n",
       "      <td>6252</td>\n",
       "      <td>6495</td>\n",
       "      <td>6883</td>\n",
       "      <td>5628</td>\n",
       "      <td>4621</td>\n",
       "      <td>3845</td>\n",
       "      <td>3409</td>\n",
       "      <td>2708</td>\n",
       "      <td>2137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wed</th>\n",
       "      <td>1664</td>\n",
       "      <td>1484</td>\n",
       "      <td>1259</td>\n",
       "      <td>1265</td>\n",
       "      <td>1128</td>\n",
       "      <td>1609</td>\n",
       "      <td>2668</td>\n",
       "      <td>4644</td>\n",
       "      <td>5469</td>\n",
       "      <td>5444</td>\n",
       "      <td>...</td>\n",
       "      <td>6069</td>\n",
       "      <td>6533</td>\n",
       "      <td>6745</td>\n",
       "      <td>7062</td>\n",
       "      <td>5691</td>\n",
       "      <td>4686</td>\n",
       "      <td>4116</td>\n",
       "      <td>3537</td>\n",
       "      <td>2826</td>\n",
       "      <td>2207</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Hour           0     1     2     3     4     5     6     7     8     9   ...  \\\n",
       "Day of Week                                                              ...   \n",
       "Fri          1983  1635  1449  1296  1339  1639  2670  4143  5018  5288  ...   \n",
       "Mon          1894  1571  1368  1272  1336  1844  2675  4430  5504  5724  ...   \n",
       "Sat          2447  2059  1883  1592  1451  1580  1880  2489  3457  4315  ...   \n",
       "Sun          2424  2135  1946  1614  1471  1488  1726  2408  3001  3728  ...   \n",
       "Thu          1731  1408  1426  1236  1293  1775  2816  4432  5297  5412  ...   \n",
       "Tue          1720  1459  1322  1213  1247  1741  2784  4425  5634  5566  ...   \n",
       "Wed          1664  1484  1259  1265  1128  1609  2668  4644  5469  5444  ...   \n",
       "\n",
       "Hour           14    15    16    17    18    19    20    21    22    23  \n",
       "Day of Week                                                              \n",
       "Fri          6394  7040  7065  7113  5668  5056  4375  3913  3422  2834  \n",
       "Mon          5713  6289  6346  6408  5441  4488  3823  3254  2658  2072  \n",
       "Sat          5421  5181  5211  5213  4980  4753  4127  3895  3226  2965  \n",
       "Sun          4744  4475  4560  4505  4402  4135  3748  3161  2629  2323  \n",
       "Thu          6079  6493  6375  6935  5512  4703  4045  3490  2844  2354  \n",
       "Tue          5926  6252  6495  6883  5628  4621  3845  3409  2708  2137  \n",
       "Wed          6069  6533  6745  7062  5691  4686  4116  3537  2826  2207  \n",
       "\n",
       "[7 rows x 24 columns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(by=['Day of Week', 'Hour']).count()['Reason'].unstack()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3cfe672-0226-43c7-8d1b-fdfd65541d2e",
   "metadata": {},
   "source": [
    "##### Step 4: Lets store this into a DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "6ddea391-29f6-410c-9e9c-013d23d30622",
   "metadata": {},
   "outputs": [],
   "source": [
    "dayHour = df.groupby(by=['Day of Week', 'Hour']).count()['Reason'].unstack()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c07b84e-89ca-4017-96f1-6b19ec015a68",
   "metadata": {},
   "source": [
    "#### HeatMap with NewDataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "f5256c6a-6d38-49e9-8e9d-494dfea4a203",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Hour', ylabel='Day of Week'>"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.heatmap(dayHour, cmap='magma')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "784d47b7-f606-4bf8-bd3a-c3d0e235a519",
   "metadata": {},
   "source": [
    "#### ClusterMap  with dayHour DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "fb63b256-4d41-410e-a803-a6659dfa6af8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.matrix.ClusterGrid at 0x207de045fa0>"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.clustermap(dayHour, cmap='coolwarm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "48a92271-6477-480d-b354-293bd447e7d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Month</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Day of Week</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Fri</th>\n",
       "      <td>9309</td>\n",
       "      <td>8255</td>\n",
       "      <td>10941</td>\n",
       "      <td>7997</td>\n",
       "      <td>8904</td>\n",
       "      <td>9207</td>\n",
       "      <td>8681</td>\n",
       "      <td>7336</td>\n",
       "      <td>7694</td>\n",
       "      <td>6934</td>\n",
       "      <td>8379</td>\n",
       "      <td>9305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mon</th>\n",
       "      <td>8896</td>\n",
       "      <td>8747</td>\n",
       "      <td>8060</td>\n",
       "      <td>8410</td>\n",
       "      <td>7881</td>\n",
       "      <td>8511</td>\n",
       "      <td>9499</td>\n",
       "      <td>6854</td>\n",
       "      <td>6598</td>\n",
       "      <td>8075</td>\n",
       "      <td>6722</td>\n",
       "      <td>8492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sat</th>\n",
       "      <td>8475</td>\n",
       "      <td>7593</td>\n",
       "      <td>8050</td>\n",
       "      <td>7514</td>\n",
       "      <td>7223</td>\n",
       "      <td>8198</td>\n",
       "      <td>7748</td>\n",
       "      <td>6111</td>\n",
       "      <td>6566</td>\n",
       "      <td>6609</td>\n",
       "      <td>6773</td>\n",
       "      <td>8592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sun</th>\n",
       "      <td>7478</td>\n",
       "      <td>6452</td>\n",
       "      <td>6766</td>\n",
       "      <td>6865</td>\n",
       "      <td>6694</td>\n",
       "      <td>6837</td>\n",
       "      <td>7859</td>\n",
       "      <td>5275</td>\n",
       "      <td>5956</td>\n",
       "      <td>6316</td>\n",
       "      <td>5196</td>\n",
       "      <td>7165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thu</th>\n",
       "      <td>9055</td>\n",
       "      <td>7997</td>\n",
       "      <td>8849</td>\n",
       "      <td>7722</td>\n",
       "      <td>8740</td>\n",
       "      <td>9489</td>\n",
       "      <td>8378</td>\n",
       "      <td>7508</td>\n",
       "      <td>6954</td>\n",
       "      <td>7482</td>\n",
       "      <td>8358</td>\n",
       "      <td>8151</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Month          1     2      3     4     5     6     7     8     9     10  \\\n",
       "Day of Week                                                                \n",
       "Fri          9309  8255  10941  7997  8904  9207  8681  7336  7694  6934   \n",
       "Mon          8896  8747   8060  8410  7881  8511  9499  6854  6598  8075   \n",
       "Sat          8475  7593   8050  7514  7223  8198  7748  6111  6566  6609   \n",
       "Sun          7478  6452   6766  6865  6694  6837  7859  5275  5956  6316   \n",
       "Thu          9055  7997   8849  7722  8740  9489  8378  7508  6954  7482   \n",
       "\n",
       "Month          11    12  \n",
       "Day of Week              \n",
       "Fri          8379  9305  \n",
       "Mon          6722  8492  \n",
       "Sat          6773  8592  \n",
       "Sun          5196  7165  \n",
       "Thu          8358  8151  "
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dayMonth = df.groupby(by=['Day of Week', 'Month']).count()['Reason'].unstack()\n",
    "dayMonth.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "cb312921-22bc-4858-8b45-90f85cf2145f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Month', ylabel='Day of Week'>"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "sns.heatmap(dayMonth, cmap='magma')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "4bdc9108-89b4-4dfa-a0be-21b8eec697cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.matrix.ClusterGrid at 0x207dcec89a0>"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.clustermap(dayMonth, cmap='mako')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e033c554-754a-46eb-829b-d6999b0bf4b8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
